name: Build

on:
  push:
    branches:
      - "main"
  release:
    types: [published]

env:
  IMAGE_NAME: jsc-k3s-dashboard
  IMAGE_TITLE: JSC k3s Dashboard
  IMAGE_DESCRIPTION: This is the image for JSC k3s Dashboard

jobs:
  build-common:
    name: Build common source code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install Dependencies
        run: |
          yarn --cwd src/common install
          yarn --cwd src/common build

      - name: Upload common artifacts
        uses: actions/upload-artifact@v4
        with:
          name: source-code-common
          retention-days: 1
          path: src/common

  build:
    name: Build client and server source code
    runs-on: ubuntu-latest
    needs: build-common

    strategy:
      matrix:
        service: [client, server]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: source-code-common
          path: src/common

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install Dependencies
        run: yarn --cwd src/${{ matrix.service }} install

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: source-code-${{ matrix.service }}
          retention-days: 1
          path: src/${{ matrix.service }}/node_modules

  lint:
    name: Run ESlint on source code
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        service: [common, client, server]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Download common artifact
        uses: actions/download-artifact@v4
        with:
          name: source-code-common
          path: src/common

      - name: Download ${{ matrix.service }} artifact
        uses: actions/download-artifact@v4
        with:
          name: source-code-${{ matrix.service }}
          path: src/${{ matrix.service }}/node_modules

      - name: Run ESLint
        run: yarn --cwd src/${{ matrix.service }} lint

  test:
    name: Run Tests with Coverage
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        service: [common, client, server]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Download common artifact
        uses: actions/download-artifact@v4
        with:
          name: source-code-common
          path: src/common

      - name: Download ${{ matrix.service }} artifact
        uses: actions/download-artifact@v4
        with:
          name: source-code-${{ matrix.service }}
          path: src/${{ matrix.service }}/node_modules

      - name: Run Tests
        run: yarn --cwd src/${{ matrix.service }} test --coverage

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.service }}
          retention-days: 1
          path: src/${{ matrix.service }}/coverage/

  upload-coverage:
    name: Upload Coverage to Codecov
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        service: [common, client, server]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-report-${{ matrix.service }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # If needed, add token in your repository secrets
          files: ./src/${{ matrix.service }}/coverage/*.json
          flags: unittests
          name: code-coverage-${{ matrix.service }}
          fail_ci_if_error: true

  build-image:
    name: Build image and push to Docker Hub
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
    if: startsWith(github.ref, 'refs/tags/v')

    strategy:
      matrix:
        service: [client, server]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}-${{ matrix.service }}
          tags: |
            type=semver,pattern={{version}}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_TITLE }} - ${{ matrix.service }}
            org.opencontainers.image.description=${{ env.IMAGE_DESCRIPTION }} for ${{ matrix.service }}.

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: etc/docker/Dockerfile.${{ matrix.service }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: GIT_TAG=${{ github.ref_name }}
